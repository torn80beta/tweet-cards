{"version":3,"file":"static/js/553.de5736cd.chunk.js","mappings":"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","sources":["pages/Home/Home.styled.jsx","pages/Home/Home.jsx","../node_modules/react-scroll-to-top/node_modules/style-inject/dist/style-inject.es.js","../node_modules/react-scroll-to-top/src/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const StyledMain = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #112538;\r\n`;\r\n\r\nexport const StyledContainerDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  max-width: 1200px;\r\n  padding: 80px 20px 40px;\r\n`;\r\n\r\nexport const StyledH1 = styled.h1`\r\n  text-align: center;\r\n  color: #fff;\r\n`;\r\n\r\nexport const StyledH2 = styled.h2`\r\n  text-align: center;\r\n  color: #fff;\r\n`;\r\n\r\nexport const StyledH3 = styled.h3`\r\n  text-align: center;\r\n  color: #fff;\r\n`;\r\n\r\nexport const StyledTextP = styled.p`\r\n  color: white;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  width: auto;\r\n  margin: 15px;\r\n`;\r\n\r\nexport const StyledUl = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n`;\r\nexport const StyledLi = styled.li`\r\n  color: #0089ff;\r\n`;\r\n","import {\r\n  StyledMain,\r\n  StyledH1,\r\n  StyledContainerDiv,\r\n  StyledTextP,\r\n  StyledImg,\r\n  StyledH2,\r\n  StyledUl,\r\n  StyledLi,\r\n  StyledH3,\r\n} from './Home.styled';\r\nimport ScrollToTop from 'react-scroll-to-top';\r\nimport card from '../../images/card.jpg';\r\nimport follow from '../../images/follow.jpg';\r\nimport follow_2 from '../../images/follow_2.jpg';\r\nimport load_more from '../../images/load_more.jpg';\r\nimport filter from '../../images/filter.jpg';\r\nimport burger from '../../images/burger.jpg';\r\nimport modal from '../../images/modal.jpg';\r\nimport hi from '../../images/Hi.gif';\r\n\r\nconst Home = () => {\r\n  const technologies = [\r\n    'React',\r\n    'Redux Toolkit',\r\n    'React Hooks',\r\n    'Styled components',\r\n    'Material UI',\r\n    'Axios',\r\n    'react-scroll-to-top',\r\n    'react-select',\r\n  ];\r\n\r\n  return (\r\n    <StyledMain>\r\n      <StyledContainerDiv>\r\n        <StyledH1>\r\n          Welcome to TweetCards demo page!\r\n          <StyledImg\r\n            src={hi}\r\n            style={{ height: 30, display: 'inline', margin: 0 }}\r\n          />\r\n        </StyledH1>\r\n        <StyledTextP>\r\n          This is a demo project that can be used as part of a larger project.\r\n          It demonstrates the ability to view a list of social network users\r\n          stored in a database.\r\n        </StyledTextP>\r\n        <StyledTextP>\r\n          Each user's card reflects the user's Avatar, the number of \"Tweets\"\r\n          and the number of the user's Followers.\r\n        </StyledTextP>\r\n        <StyledImg src={card} alt=\"card\" />\r\n        <StyledTextP>\r\n          The \"Follow\" button displays the subscription status for this user. If\r\n          you are subscribed - the button is green and the inscription is\r\n          \"Following\". When clicking on the button in this state, the user will\r\n          be unsubscribed, the color of the button will change to pale pink, and\r\n          the number of subscribers will decrease by one.\r\n        </StyledTextP>\r\n        <StyledImg src={follow} alt=\"following\" />\r\n        <br />\r\n        <StyledImg src={follow_2} alt=\"follow\" />\r\n\r\n        <StyledTextP>\r\n          By default, when you go to the \"TWEETS\" page, the first eight cards\r\n          from the database are loaded. At the same time, the \"Load more\" button\r\n          will appear at the bottom of the page, when clicked, the next five\r\n          cards will be loaded. The \"Load more\" button only appears if the\r\n          server still has cards available for download. The button is also not\r\n          available during the server request process.\r\n        </StyledTextP>\r\n        <StyledImg src={load_more} alt=\"load more\" />\r\n        <StyledTextP>\r\n          The user has the ability to filter already loaded cards using the\r\n          \"Filter\" interface located on the top panel. If you select the\r\n          \"Follow\" option, only the cards of users for which the subscription\r\n          has not yet been issued will be displayed. If you select the\r\n          \"Following\" option, cards of users with an active subscription will be\r\n          displayed. In both cases, the \"Load more\" button will be disabled.\r\n          Selecting the \"All\" option will display all currently loaded cards and\r\n          a \"Load more\" button will appear at the bottom of the list.\r\n        </StyledTextP>\r\n        <StyledImg src={filter} alt=\"filter\" />\r\n        <StyledTextP>\r\n          The application has a responsive design and can be comfortably used on\r\n          devices with a screen width of 400px. When the screen width is less\r\n          than 600px, the navigation buttons located on the top bar are moved to\r\n          a modal menu, which is available by clicking on the \"Burger Menu\"\r\n          icon. At the same time, for ease of use, the filtering interface\r\n          remains available on the top panel.\r\n        </StyledTextP>\r\n        <StyledImg src={burger} alt=\"burger\" />\r\n        <br />\r\n        <StyledImg src={modal} alt=\"modal\" />\r\n        <section>\r\n          <StyledH2>Technologies</StyledH2>\r\n          <StyledTextP>\r\n            Technologies and libraries used to create this project:\r\n          </StyledTextP>\r\n          <StyledUl>\r\n            {technologies.map(tech => (\r\n              <StyledLi key={tech}>{tech}</StyledLi>\r\n            ))}\r\n          </StyledUl>\r\n        </section>\r\n        <StyledH3>\r\n          Thank you for your attention to the project! I hope you enjoy it!\r\n        </StyledH3>\r\n      </StyledContainerDiv>\r\n      <ScrollToTop smooth style={{ background: '#ebd8ff' }} />\r\n    </StyledMain>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./styles.css\";\n\ntype Props = React.ComponentPropsWithoutRef<\"button\"> & {\n  top?: number;\n  smooth?: boolean;\n  svgPath?: string;\n  viewBox?: string;\n  component?: any;\n  width?: string;\n  height?: string;\n};\n\nfunction scrollToTop(smooth: boolean = false) {\n  if (smooth) {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  } else {\n    document.documentElement.scrollTop = 0;\n  }\n}\n\nconst ScrollToTop = ({\n  top = 20,\n  className = \"\",\n  color = \"black\",\n  smooth = false,\n  component = \"\",\n  viewBox = \"0 0 256 256\",\n  svgPath = \"M222.138,91.475l-89.6-89.6c-2.5-2.5-6.551-2.5-9.051,0l-89.6,89.6c-2.5,2.5-2.5,6.551,0,9.051s6.744,2.5,9.244,0L122,21.85  V249.6c0,3.535,2.466,6.4,6,6.4s6-2.865,6-6.4V21.85l78.881,78.676c1.25,1.25,2.992,1.875,4.629,1.875s3.326-0.625,4.576-1.875  C224.586,98.025,224.638,93.975,222.138,91.475z\",\n  width = \"28\",\n  height = \"28\",\n  ...props\n}: Props) => {\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    const onScroll = () => {\n      setVisible(document.documentElement.scrollTop >= top);\n    };\n    onScroll();\n    document.addEventListener(\"scroll\", onScroll);\n    return () => document.removeEventListener(\"scroll\", onScroll);\n  }, [top]);\n\n  return (\n    <>\n      {visible && (\n        <button\n          className={`scroll-to-top ${className}`}\n          onClick={() => scrollToTop(smooth)}\n          aria-label=\"Scroll to top\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...props}\n        >\n          {component || (\n            <svg width={width} height={height} fill={color} viewBox={viewBox}>\n              <path d={svgPath} />\n            </svg>\n          )}\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default ScrollToTop;\n"],"names":["StyledMain","styled","main","_templateObject","_taggedTemplateLiteral","StyledContainerDiv","div","_templateObject2","StyledH1","h1","_templateObject3","StyledH2","h2","_templateObject4","StyledH3","h3","_templateObject5","StyledTextP","p","_templateObject6","StyledImg","img","_templateObject7","StyledUl","ul","_templateObject8","StyledLi","li","_templateObject9","_jsxs","children","_jsx","src","hi","style","height","display","margin","card","alt","burger","modal","map","tech","ScrollToTop","smooth","background","css","ref","insertAt","document","head","getElementsByTagName","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","_a","_b","top","_c","className","_d","color","_e","_f","component","_g","viewBox","_h","svgPath","_j","width","_k","props","__rest","_l","React","useState","visible","setVisible","useEffect","onScroll","documentElement","scrollTop","addEventListener","removeEventListener","React__default","Fragment","__assign","onClick","window","scrollTo","behavior","scrollToTop","fill","d"],"sourceRoot":""}