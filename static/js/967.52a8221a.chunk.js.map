{"version":3,"file":"static/js/967.52a8221a.chunk.js","mappings":"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","sources":["redux/users/selectors.js","components/TweetCard/TweetCard.styled.jsx","components/TweetCard/TweetCard.jsx","pages/Tweets/Tweets.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Tweets/Tweets.jsx"],"sourcesContent":["export const getUsers = state => state.users.items;\r\nexport const getIsLoading = state => state.users.isLoading;\r\nexport const getError = state => state.users.error;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const StyledTweetCardWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* justify-content: center; */\r\n  align-items: center;\r\n  width: 380px;\r\n  height: 460px;\r\n  border-radius: 20px;\r\n  background: linear-gradient(\r\n    114.99deg,\r\n    #471ca9 -0.99%,\r\n    #5736a3 54.28%,\r\n    #4b2a99 78.99%\r\n  );\r\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\n`;\r\n\r\nexport const StyledTweetImage = styled.img`\r\n  width: 308px;\r\n  height: 168px;\r\n  margin: 28px 36px 18px;\r\n`;\r\n\r\nexport const StyledTweetAvatar = styled.img`\r\n  position: absolute;\r\n  width: 58px;\r\n  height: 58px;\r\n  left: 160px;\r\n  top: 185px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const StyledAvatarEllipse = styled.img`\r\n  position: absolute;\r\n  left: 150px;\r\n  top: 178px;\r\n  width: 80px;\r\n  height: 80px;\r\n  z-index: 100;\r\n`;\r\n\r\nexport const StyledTweetDivider = styled.div`\r\n  width: 380px;\r\n  height: 8px;\r\n  margin-bottom: 62px;\r\n  background: #ebd8ff;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\r\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\r\n`;\r\n\r\nexport const StyledTweetText = styled.p`\r\n  margin-bottom: 16px;\r\n  font-family: 'MontserratMedium';\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  text-transform: uppercase;\r\n  color: #ebd8ff;\r\n`;\r\n\r\nconst followButtonBgColor = props => props.bgColor;\r\n\r\nexport const StyledTweetFallowButton = styled.button`\r\n  width: 196px;\r\n  height: 50px;\r\n  margin-top: 10px;\r\n  padding: 14px 28px;\r\n  font-family: 'MontserratBold';\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  text-transform: uppercase;\r\n  color: #373737;\r\n  background: ${followButtonBgColor};\r\n  border: none;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10.3108px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: #aeffd9;\r\n  }\r\n  &:active {\r\n    background: #5cd3a8;\r\n  }\r\n`;\r\n\r\nexport const StyledTweetLogo = styled.img`\r\n  position: absolute;\r\n  width: 76px;\r\n  height: 22px;\r\n  left: 20px;\r\n  top: 20px;\r\n`;\r\n","import {\r\n  StyledTweetCardWrapper,\r\n  StyledTweetImage,\r\n  StyledTweetAvatar,\r\n  StyledTweetDivider,\r\n  StyledTweetText,\r\n  StyledTweetFallowButton,\r\n  StyledAvatarEllipse,\r\n  StyledTweetLogo,\r\n} from './TweetCard.styled';\r\nimport picture2_1 from '../../images/picture2_1.png';\r\nimport ellipse from '../../images/ellipse.png';\r\nimport logo from '../../images/logo.png';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateIsFallow } from 'redux/users/operations';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TweetCard = ({\r\n  tweet: { name, avatar, tweets, followers, id, follow },\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const bgColor = () => {\r\n    return follow ? '#5CD3A8' : '#EBD8FF';\r\n  };\r\n\r\n  const isFollow = () => {\r\n    return follow ? 'Following' : 'Follow';\r\n  };\r\n\r\n  const updateFollowers = () => {\r\n    return follow ? followers - 1 : followers + 1;\r\n  };\r\n\r\n  function handleFollow(id, follow) {\r\n    dispatch(\r\n      updateIsFallow({ id, follow: !follow, followers: updateFollowers() })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <StyledTweetCardWrapper>\r\n      <StyledTweetLogo src={logo} />\r\n      <StyledTweetImage src={picture2_1} />\r\n      <StyledAvatarEllipse src={ellipse} />\r\n      <StyledTweetAvatar src={avatar} alt={name} />\r\n      <StyledTweetDivider />\r\n      <StyledTweetText>{tweets} Tweets</StyledTweetText>\r\n      <StyledTweetText>{`100,${followers + 500}`} Followers</StyledTweetText>\r\n      <StyledTweetFallowButton\r\n        type=\"button\"\r\n        bgColor={bgColor}\r\n        onClick={() => {\r\n          handleFollow(id, follow, followers);\r\n        }}\r\n      >\r\n        {isFollow()}\r\n      </StyledTweetFallowButton>\r\n    </StyledTweetCardWrapper>\r\n  );\r\n};\r\n\r\nTweetCard.propTypes = {\r\n  tweet: PropTypes.object.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const StyledTweetsSection = styled.section`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  max-width: 100vw;\r\n  min-height: 100vh;\r\n  margin: 0 auto;\r\n  padding: 80px 0px 60px;\r\n  background-color: #112538;\r\n`;\r\n\r\nexport const StyledTweetsUl = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nexport const StyledLoadMoreButton = styled.button`\r\n  width: 196px;\r\n  height: 50px;\r\n  margin-top: 10px;\r\n  padding: 14px 28px;\r\n  font-family: 'MontserratBold';\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  text-transform: uppercase;\r\n  color: #c7c7c7;\r\n  background: #452199;\r\n  border: none;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10.3108px;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  :focus {\r\n    background: #6031cd;\r\n  }\r\n`;\r\n\r\nexport const StyledNavLink = styled(NavLink)`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: calc((100vw - 90%) * 0.25);\r\n  color: #ebd8ff;\r\n  z-index: 100;\r\n  &:hover {\r\n    color: #aeffd9;\r\n  }\r\n  &:active {\r\n    color: #5cd3a8;\r\n  }\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport Select from 'react-select';\r\n\r\nexport const StyledFilterWrapper = styled.div`\r\n  position: fixed;\r\n  box-sizing: border-box;\r\n  top: 10px;\r\n  left: calc((50vw + 50%) * 0.46);\r\n  min-width: 140px;\r\n  z-index: 1100;\r\n`;\r\n\r\nexport const StyledSelect = styled(Select)`\r\n  background: #29272c;\r\n`;\r\n","import { StyledFilterWrapper, StyledSelect } from './Filter.styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst options = [\r\n  { value: 'All', label: 'All' },\r\n  { value: 'Follow', label: 'Follow' },\r\n  { value: 'Followings', label: 'Followings' },\r\n];\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <StyledFilterWrapper className=\"BaseFilter\">\r\n      <StyledSelect\r\n        defaultValue={value}\r\n        onChange={onChange}\r\n        options={options}\r\n        placeholder={'Filter'}\r\n      />\r\n    </StyledFilterWrapper>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import { getUsers, getIsLoading } from 'redux/users/selectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { fetchUsers } from 'redux/users/operations';\r\nimport { TweetCard } from 'components/TweetCard/TweetCard';\r\nimport {\r\n  StyledTweetsSection,\r\n  StyledTweetsUl,\r\n  StyledLoadMoreButton,\r\n} from './Tweets.styled';\r\nimport { clearTweetsOuUnmount } from 'redux/users/usersSlice';\r\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\r\nimport { StyledNavLink } from './Tweets.styled';\r\nimport { StyledLoadSpinner } from 'components/LoadSpinner/LoadSpinner.styled';\r\nimport { RotatingLines } from 'react-loader-spinner';\r\nimport Filter from 'components/Filter/Filter';\r\nimport ScrollToTop from 'react-scroll-to-top';\r\n\r\nconst Tweets = () => {\r\n  const dispatch = useDispatch();\r\n  const tweets = useSelector(getUsers);\r\n  const isFetching = useSelector(getIsLoading);\r\n  const [page, setPage] = useState(1);\r\n  const [filter, setFilter] = useState('All');\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsers(page));\r\n  }, [dispatch, page]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(clearTweetsOuUnmount());\r\n      setPage(1);\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const handleFilterChange = ({ value }) => {\r\n    setFilter(value);\r\n  };\r\n\r\n  function handleLoadMore() {\r\n    setPage(page + 1);\r\n  }\r\n\r\n  const filteredTweets = () => {\r\n    if (filter === 'Follow') {\r\n      return tweets.filter(tweet => tweet.follow === false);\r\n    }\r\n    if (filter === 'Followings') {\r\n      return tweets.filter(tweet => tweet.follow === true);\r\n    }\r\n    return tweets;\r\n  };\r\n\r\n  return (\r\n    <StyledTweetsSection>\r\n      <StyledNavLink to={'Home'}>\r\n        <KeyboardBackspaceIcon sx={{ fontSize: 50 }} />\r\n      </StyledNavLink>\r\n      <Filter onChange={handleFilterChange} value={filter}></Filter>\r\n      {isFetching && (\r\n        <StyledLoadSpinner>\r\n          <RotatingLines\r\n            strokeColor=\"grey\"\r\n            strokeWidth=\"5\"\r\n            animationDuration=\"0.75\"\r\n            width=\"96\"\r\n            visible={true}\r\n          />\r\n        </StyledLoadSpinner>\r\n      )}\r\n      <StyledTweetsUl>\r\n        {filteredTweets().length === 0 && !isFetching && (\r\n          <p style={{ color: 'white' }}>\r\n            There is nothing to display ¯\\_(ツ)_/¯\r\n          </p>\r\n        )}\r\n        {filteredTweets().map(tweet => (\r\n          <li key={tweet.id}>\r\n            <TweetCard tweet={tweet} />\r\n          </li>\r\n        ))}\r\n      </StyledTweetsUl>\r\n      {tweets.length > 0 && tweets.length < 50 && filter === 'All' && (\r\n        <StyledLoadMoreButton\r\n          type=\"button\"\r\n          onClick={handleLoadMore}\r\n          disabled={isFetching}\r\n        >\r\n          Load more\r\n        </StyledLoadMoreButton>\r\n      )}\r\n      <ScrollToTop smooth style={{ background: '#ebd8ff' }} />\r\n    </StyledTweetsSection>\r\n  );\r\n};\r\n\r\nexport default Tweets;\r\n"],"names":["getUsers","state","users","items","getIsLoading","isLoading","StyledTweetCardWrapper","styled","div","_templateObject","_taggedTemplateLiteral","StyledTweetImage","img","_templateObject2","StyledTweetAvatar","_templateObject3","StyledAvatarEllipse","_templateObject4","StyledTweetDivider","_templateObject5","StyledTweetText","p","_templateObject6","StyledTweetFallowButton","button","_templateObject7","props","bgColor","StyledTweetLogo","_templateObject8","TweetCard","_ref","_ref$tweet","tweet","name","avatar","tweets","followers","id","follow","dispatch","useDispatch","updateFollowers","_jsxs","children","_jsx","src","picture2_1","alt","concat","type","onClick","updateIsFallow","handleFollow","StyledTweetsSection","section","StyledTweetsUl","ul","StyledLoadMoreButton","StyledNavLink","NavLink","StyledFilterWrapper","StyledSelect","Select","options","value","label","Filter","onChange","className","defaultValue","placeholder","useSelector","isFetching","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","filter","setFilter","useEffect","fetchUsers","clearTweetsOuUnmount","filteredTweets","to","KeyboardBackspaceIcon","sx","fontSize","StyledLoadSpinner","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","length","style","color","map","disabled","ScrollToTop","smooth","background"],"sourceRoot":""}